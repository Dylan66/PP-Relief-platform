/* frontend/src/pages/RequestPage.css */

.request-page-container {
    font-family: Arial, sans-serif;
    color: #333;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

.request-page-container > *:not(footer) {
    flex-grow: 1;
}

.nav-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px 50px;
    background-color: #fff;
    border-bottom: 1px solid #eee;
}

.nav-logo {
    font-size: 24px;
    font-weight: bold;
}

.nav-links {
    display: flex;
    gap: 20px;
}

.nav-link {
    text-decoration: none;
    color: #333;
    font-weight: 500;
}

.nav-lang {
    /* Style for language selector if needed */
}

.page-section {
    padding: 40px 20px;
    text-align: center;
}

.light-pink-background {
    background-color: #FDF2F8; /* A very light pink, adjust as needed */
}

.section-heading {
    font-size: 32px;
    font-weight: bold;
    margin-bottom: 20px;
    text-align: center;
    color: #000;
}

.section-text {
    font-size: 16px;
    color: #333;
    max-width: 600px;
    margin: 0 auto 20px auto;
    line-height: 1.6;
}

.buttons-section {
    padding: 40px 20px;
    text-align: center;
    padding-bottom: 50px;
}

.button-base {
    padding: 15px 30px;
    font-size: 16px;
    font-weight: bold;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin: 10px;
}

.register-button {
    /* Extends button-base */
    background-color: #D6D6F5; /* Light purple */
    color: #000;
}

.donate-button {
    /* Extends button-base */
    background-color: #F5D6F0; /* Light pink */
    color: #000;
}

.image-text-container {
  display: flex; /* Enables flexbox layout */
  align-items: center; /* Vertically aligns the image and text if their heights differ */
  gap: 20px; /* Adds some space between the image and the text block */
  max-width: 1100px; /* Constrain the max width of the container */
  margin: 0 auto 20px auto; /* Center the container and retain bottom margin */
}

.info-image {
  /* flex: flex-grow flex-shrink flex-basis */
  flex: 0 1 calc(50% - 10px); /* Aim for 50% width minus half the gap, can shrink, won't grow */
  min-width: 0; /* Allow shrinking below content size */
  height: auto;     /* Maintains the aspect ratio of the image */
  border-radius: 8px; /* Optional: gives the images rounded corners */
  object-fit: cover;  /* Ensures the image covers the area without distortion, might crop */
}

.image-text-container .section-text {
  /* flex: flex-grow flex-shrink flex-basis */
  flex: 0 1 calc(50% - 10px); /* Aim for 50% width minus half the gap, can shrink, won't grow */
  min-width: 0; /* Allow shrinking below content size */
  /* max-width: none; was already there, effectively handled by flex-basis */
  margin: 0; /* Was already there */
  text-align: left; /* Align text to the left within its container */
}

/* Optional: Media query for smaller screens to stack image and text */
@media (max-width: 768px) {
  .image-text-container {
    flex-direction: column; /* Stacks image on top of text */
    align-items: center; /* Center items in column layout */
    /* max-width from above still applies, which is fine */
  }

  .info-image {
    flex-basis: auto; /* Reset flex-basis from desktop view */
    width: 80%; /* Control width in stacked view */
    max-width: 400px; /* Add a max pixel width for stacked image */
    margin-bottom: 15px; /* Adds space below the image when stacked */
    /* height, border-radius, object-fit are inherited */
  }

  .image-text-container .section-text {
    flex-basis: auto; /* Reset flex-basis from desktop view */
    width: 100%; /* Text takes full width in stacked view */
    text-align: center; /* Center text on smaller screens when stacked */
    /* margin: 0; is inherited */
  }
}

.how-we-do-it-image {
  max-height: 300px; /* Adjust this value as needed */
  object-fit: contain; /* Ensures the whole image is visible, scaled down */
  width: 100%; /* Ensure it tries to fill the flex-basis width while respecting max-height */
}

